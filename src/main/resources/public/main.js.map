{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/currency-convertion.ts","./src/app/currency-exchanger/currency-exchanger.component.ts","./src/app/currency-exchanger/currency-exchanger.component.html","./src/app/services/currency-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CurrencyExchange';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <!-- CSS only -->\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\">\n\n<!-- JS, Popper.js, and jQuery -->\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\" integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\" crossorigin=\"anonymous\"></script>\n  <title>Document</title>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n        <app-currency-exchanger></app-currency-exchanger>\n      </div>\n    </div>\n  </div>\n</body>\n</html>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CurrencyService } from \"./services/currency-service.service\";\nimport { CurrencyExchangerComponent } from './currency-exchanger/currency-exchanger.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrencyExchangerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgSelectModule,\n    FormsModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    MatInputModule\n  ],\n  providers: [CurrencyService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class CurrencyConvertion {\n\n    constructor(public from_currency: number, public to_currency: number) {}\n\n}\n","import {Component, OnInit,} from '@angular/core';\nimport {CurrencyService} from '../services/currency-service.service';\nimport {Currency} from '../common/currency';\nimport {CurrencyConvertion} from '../common/currency-convertion';\nimport {Date} from '../common/date';\n\n@Component({\n  selector: 'app-currency-exchanger',\n  templateUrl: './currency-exchanger.component.html',\n  styleUrls: ['./currency-exchanger.component.css']\n})\nexport class CurrencyExchangerComponent implements OnInit {\n\n  currencies: Currency[];\n  private from: number;\n  private to: number;\n  public result: string;\n  public input: number;\n  public today: Date;\n  public rate: number;\n\n  constructor(private currencyService: CurrencyService) { }\n\n  ngOnInit(): void {\n    this.result = 0.00000 + \"\";\n    this.listCurrencies();\n    this.getToday();\n  }\n\n  onChangeFrom = ($event: any) => {\n    if($event != null) {\n      this.from = $event.id;\n      this.checkSafeToGetRates();\n    } else {\n      this.result = 0.00000 + \"\";\n    }\n  };\n\n  onChangeTo = ($event: any) => {\n    if($event != null) {\n      this.to = $event.id;\n      this.checkSafeToGetRates();\n    } else {\n      this.result = 0.00000 + \"\";\n    }\n  };\n\n  onChangeToCurrency = (toInput: number): void => {\n     this.input = toInput;\n    if( (this.isFromAndToWithData()) && (toInput != null)) {\n      this.result = this.calculateCurrencyResult(this.rate);\n    } else {\n      this.result = 0.00000 + \"\";\n    }\n  };\n\n  async mirtiesKelias(values: CurrencyConvertion) {\n    this.currencyService.getCurrencyRate(values).subscribe( data => {\n      this.rate = data.currency_value;\n      let calcValue = this.calculateCurrencyResult(data.currency_value);\n\n      if(calcValue == null) {\n         this.result = \"0.00000\";\n      } else {\n        this.result = this.calculateCurrencyResult(data.currency_value);\n      }\n    });\n  }\n\n  getToday() {\n    this.currencyService.getDate().subscribe(\n      data => {\n        this.today = data;\n      }\n    )\n  }\n\n  listCurrencies() {\n    this.currencyService.getCurrencyList().subscribe (\n      data => {\n        this.currencies = data;\n      }\n    )\n  }\n\n  calculateCurrencyResult(rate: number): string {\n    console.log(rate + \" in calculate currency result\");\n    console.log(this.input + \" this is the input value\");\n      if( (this.input == null) ) {\n        this.result = \"0.00000\";\n      }\n      return (rate * this.input).toFixed(5);\n  }\n\n  isFromAndToWithData(): boolean {\n    return (this.from != null) && (this.to != null);\n  }\n\n   checkSafeToGetRates() {\n    if ((this.from != null) && (this.to != null)) {\n        let values: CurrencyConvertion = new CurrencyConvertion(this.from, this.to);\n        this.mirtiesKelias(values);\n    }\n  }\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if(charCode === 46) {\n      return true;\n    } else if(charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n  }\n\n}\n","<h2>Valiutų kursai atnaujinti {{today.date}}</h2>\n<div class=\"row justify-content-center\">\n    <div class=\"col-lg-2 col-xl-2\">\n        <mat-form-field class=\"full-width\">\n            <mat-label>Valiutos kiekis</mat-label>\n            <input matInput (keypress)=\"numberOnly($event)\" type=\"text\"\n            (input)=\"onChangeToCurrency($event.target.value)\">\n        </mat-form-field>\n    </div>\n    <div class=\"col-lg-2 col-xl-2\">\n        <ng-select [items]=\"currencies\" bindLabel=\"code\" bindValue=\"id\" (change)=\"onChangeFrom($event)\"\n            notFoundText=\"Valiuta nerasta\" loadingText=\"Kraunama\" placeholder=\"Iš valiutos\">\n        </ng-select>\n    </div>\n    <div class=\"col-lg-1 col-xl-1 center-image\">\n        <img class=\"equals-image\" src=\"../../assets/images/equal-sign.png\" alt=\"equals-sign\">\n    </div>\n    <div class=\"col-lg-2 col-xl-2\">\n        <ng-select [items]=\"currencies\" bindLabel=\"code\" bindValue=\"id\" (change)=\"onChangeTo($event)\"\n            notFoundText=\"Valiuta nerasta\" loadingText=\"Kraunama\" placeholder=\"Į valiutą\">\n        </ng-select>\n    </div>\n    <div class=\"col-lg-2 col-xl-2\">\n        <mat-form-field class=\"full-width\">\n            <mat-label>Konvertuotas kiekis</mat-label>\n            <input matInput [readonly]=\"true\" id=\"currency_value\" value = \"{{result}}\">\n        </mat-form-field>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Currency } from '../common/currency';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { CurrencyConvertion } from '../common/currency-convertion';\nimport { CurrencyRate } from '../common/currency-rate';\nimport { Date } from '../common/date';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CurrencyService {\n\n  private url: string = \"http://totaurestapi-env.eba-dfyvcstc.eu-central-1.elasticbeanstalk.com/api/currencies/v1\";\n\n  constructor(private http: HttpClient) { }\n\n  getCurrencyList(): Observable<Currency[]> {\n    return this.http.get<Currency[]>(this.url);\n  }\n\n  getCurrencyRate(currencyConvertion: CurrencyConvertion) {\n      return this.http.post<CurrencyRate>(this.url, currencyConvertion);\n  }\n\n  getDate(): Observable<Date> {\n    return this.http.get<Date>(this.url+\"/today\");\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}